import lib601.sm as sm
class BA1(sm.SM):
	startState = 0
	def getNextValues(self, state, inp):
		if inp != 0:
			newState = state * 1.02 + inp - 100
		else:
			newState = state * 1.02
		return (newState, newState)

class BA2(sm.SM):
	startState = 0
	def getNextValues(self, state, inp):
		newState = state * 1.01 + inp
		return (newState, newState)
class PureFunction(sm.SM):
        def__init__(self,f):
            self.f= max()
        def getNextValues(self,state,inp):
            return 'state',self.f(inp)
ba1=BA1()
ba2=BA2()
maxAccount = sm.Cascade(sm.Parallel(ba1,ba2),sm.PureFunction())
